name: Android APK Release

on:
  push:
    tags:
      - 'v*'          # déclenchement sur chaque tag v1.0.0, v1.0.1, …

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # 1. JDK pour Gradle/NativeScript
    - name: Setup JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '11'

    # 2. SDK Android complet — on ajoute explicitement les paquets requis
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        # plate-forme API 34 + build-tools 34 + ndk facultatif
        packages: |
          platform-tools
          platforms;android-34
          build-tools;34.0.0

    # 3. Rendez $ANDROID_HOME visible pour NativeScript
    - name: Export ANDROID_HOME
      run: echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

    # 4. Node & NativeScript CLI
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - run: npm install -g nativescript
    - run: npm ci          # installe les dépendances de l’app

    # 5. Décode le keystore (déjà mis en secret)
    - run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > cogwalk-release-key.jks

    # 6. Build APK signé
    - run: |
        ns build android \
          --release \
          --key-store-path cogwalk-release-key.jks \
          --key-store-password "${{ secrets.KEYSTORE_PASSWORD }}" \
          --key-store-alias "${{ secrets.KEY_ALIAS }}" \
          --key-store-alias-password "${{ secrets.KEY_PASSWORD }}"

    # 7. Renomme et publie l’APK dans la Release GitHub
    - run: mv platforms/android/app/build/outputs/apk/release/app-release.apk cogwalk-${{ github.ref_name }}.apk
    - uses: softprops/action-gh-release@v2
      with:
        files: cogwalk-${{ github.ref_name }}.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
